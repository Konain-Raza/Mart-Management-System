#pragma once

#include "login_page.h"
#include <iostream>
#include <fstream>
#include <msclr/marshal_cppstd.h> // Include this for converting System::String^ to std::string
#include <Windows.h>
#include "forgotpassword_page.h"
#include "Software.h"

namespace MartBillingSystem {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Data::SqlClient;
	using namespace System::Drawing;
	using namespace std;

	public ref class login_page : public System::Windows::Forms::Form
	{

	public:

		login_page(void) {
			InitializeComponent();
			//
			//TODO: Add the constructor code here
			//

		}

	protected:
		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		~login_page()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::Label^ signin_label;
	protected:
	private: System::Windows::Forms::Label^ username_label;
	private: System::Windows::Forms::Label^ password_label;
	private: System::Windows::Forms::TextBox^ username_textbox;
	private: System::Windows::Forms::TextBox^ password_textbox;
	private: System::Windows::Forms::Label^ fogetpassword_label;
	private: System::Windows::Forms::Button^ login_button;
	private: System::Windows::Forms::Button^ exit_button;


	protected:
		String^ username;
		String^ password;
	private:
		/// <summary>
		/// Required designer variable.
		/// </summary>
		System::ComponentModel::Container^ components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		void InitializeComponent(void)
		{
			System::ComponentModel::ComponentResourceManager^ resources = (gcnew System::ComponentModel::ComponentResourceManager(login_page::typeid));
			this->signin_label = (gcnew System::Windows::Forms::Label());
			this->username_label = (gcnew System::Windows::Forms::Label());
			this->password_label = (gcnew System::Windows::Forms::Label());
			this->username_textbox = (gcnew System::Windows::Forms::TextBox());
			this->password_textbox = (gcnew System::Windows::Forms::TextBox());
			this->fogetpassword_label = (gcnew System::Windows::Forms::Label());
			this->login_button = (gcnew System::Windows::Forms::Button());
			this->exit_button = (gcnew System::Windows::Forms::Button());
			this->SuspendLayout();
			// 
			// signin_label
			// 
			this->signin_label->AutoSize = true;
			this->signin_label->BackColor = System::Drawing::Color::Transparent;
			this->signin_label->Font = (gcnew System::Drawing::Font(L"Century Gothic", 36, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->signin_label->ForeColor = System::Drawing::Color::Black;
			this->signin_label->Location = System::Drawing::Point(85, 48);
			this->signin_label->Name = L"signin_label";
			this->signin_label->Size = System::Drawing::Size(157, 58);
			this->signin_label->TabIndex = 0;
			this->signin_label->Text = L"Signin";
			this->signin_label->Click += gcnew System::EventHandler(this, &login_page::signin_label_Click);
			// 
			// username_label
			// 
			this->username_label->AutoSize = true;
			this->username_label->BackColor = System::Drawing::Color::Transparent;
			this->username_label->Font = (gcnew System::Drawing::Font(L"Century Gothic", 17));
			this->username_label->Location = System::Drawing::Point(90, 154);
			this->username_label->Name = L"username_label";
			this->username_label->Size = System::Drawing::Size(126, 27);
			this->username_label->TabIndex = 1;
			this->username_label->Text = L"Username";
			this->username_label->Click += gcnew System::EventHandler(this, &login_page::username_label_Click);
			// 
			// password_label
			// 
			this->password_label->AutoSize = true;
			this->password_label->BackColor = System::Drawing::Color::Transparent;
			this->password_label->Font = (gcnew System::Drawing::Font(L"Century Gothic", 17));
			this->password_label->Location = System::Drawing::Point(90, 213);
			this->password_label->Name = L"password_label";
			this->password_label->Size = System::Drawing::Size(118, 27);
			this->password_label->TabIndex = 2;
			this->password_label->Text = L"Password";
			this->password_label->Click += gcnew System::EventHandler(this, &login_page::password_label_Click);
			// 
			// username_textbox
			// 
			this->username_textbox->Font = (gcnew System::Drawing::Font(L"Century Gothic", 14));
			this->username_textbox->Location = System::Drawing::Point(231, 162);
			this->username_textbox->Name = L"username_textbox";
			this->username_textbox->Size = System::Drawing::Size(218, 30);
			this->username_textbox->TabIndex = 3;
			this->username_textbox->TextChanged += gcnew System::EventHandler(this, &login_page::username_textbox_TextChanged);
			// 
			// password_textbox
			// 
			this->password_textbox->Font = (gcnew System::Drawing::Font(L"Century Gothic", 14));
			this->password_textbox->Location = System::Drawing::Point(231, 210);
			this->password_textbox->Name = L"password_textbox";
			this->password_textbox->PasswordChar = '*';
			this->password_textbox->Size = System::Drawing::Size(218, 30);
			this->password_textbox->TabIndex = 4;
			this->password_textbox->UseSystemPasswordChar = true;
			this->password_textbox->TextChanged += gcnew System::EventHandler(this, &login_page::password_textbox_TextChanged);
			// 
			// fogetpassword_label
			// 
			this->fogetpassword_label->AutoSize = true;
			this->fogetpassword_label->BackColor = System::Drawing::Color::Transparent;
			this->fogetpassword_label->Cursor = System::Windows::Forms::Cursors::Hand;
			this->fogetpassword_label->Font = (gcnew System::Drawing::Font(L"Century Gothic", 12, System::Drawing::FontStyle::Underline, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->fogetpassword_label->ForeColor = System::Drawing::Color::Blue;
			this->fogetpassword_label->Location = System::Drawing::Point(276, 265);
			this->fogetpassword_label->Name = L"fogetpassword_label";
			this->fogetpassword_label->Size = System::Drawing::Size(137, 21);
			this->fogetpassword_label->TabIndex = 5;
			this->fogetpassword_label->Text = L"Forgot Password";

			// 
			// login_button
			// 
			this->login_button->Cursor = System::Windows::Forms::Cursors::Hand;
			this->login_button->Location = System::Drawing::Point(231, 306);
			this->login_button->Name = L"login_button";
			this->login_button->Size = System::Drawing::Size(79, 29);
			this->login_button->TabIndex = 6;
			this->login_button->Text = L"Login";
			this->login_button->UseVisualStyleBackColor = true;
			this->login_button->Click += gcnew System::EventHandler(this, &login_page::login_button_Click);
			// 
			// exit_button
			// 
			this->exit_button->Cursor = System::Windows::Forms::Cursors::Hand;
			this->exit_button->Location = System::Drawing::Point(370, 306);
			this->exit_button->Name = L"exit_button";
			this->exit_button->Size = System::Drawing::Size(79, 29);
			this->exit_button->TabIndex = 7;
			this->exit_button->Text = L"Exit";
			this->exit_button->UseVisualStyleBackColor = true;
			this->exit_button->Click += gcnew System::EventHandler(this, &login_page::exit_button_Click);
			// 
			// login_page
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(7, 16);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackgroundImage = (cli::safe_cast<System::Drawing::Image^>(resources->GetObject(L"$this.BackgroundImage")));
			this->ClientSize = System::Drawing::Size(746, 512);
			this->Controls->Add(this->exit_button);
			this->Controls->Add(this->login_button);
			this->Controls->Add(this->fogetpassword_label);
			this->Controls->Add(this->password_textbox);
			this->Controls->Add(this->username_textbox);
			this->Controls->Add(this->password_label);
			this->Controls->Add(this->username_label);
			this->Controls->Add(this->signin_label);
			this->Font = (gcnew System::Drawing::Font(L"Century Gothic", 8.25F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->Margin = System::Windows::Forms::Padding(3, 4, 3, 4);
			this->Name = L"login_page";
			this->Text = L"Login";
			this->Load += gcnew System::EventHandler(this, &login_page::login_page_Load);
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion
	private: System::Void login_page_Load(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void username_label_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void password_textbox_TextChanged(System::Object^ sender, System::EventArgs^ e) {

		password = password_textbox->Text;

	}
	private: System::Void password_label_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void signin_label_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void username_textbox_TextChanged(System::Object^ sender, System::EventArgs^ e) {
		username = username_textbox->Text;
	}
	private: System::Void login_button_Click(System::Object^ sender, System::EventArgs^ e) {
		if (username->Length == 0 || password->Length == 0) {
			MessageBox::Show("Please enter a valid username and password.");
			return;
		}

		try {
			String^ connectstring = "Data Source=(LocalDB)\\MSSQLLocalDB;AttachDbFilename=C:\\Users\\Konain Raza\\Documents\\MartBillingSystem.mdf;Integrated Security=True;Connect Timeout=30";
			SqlConnection sqlConn(connectstring);
			sqlConn.Open();

			String^ sqlquery = "SELECT * FROM Credentials WHERE Username=@username AND Password=@password;";
			SqlCommand command(sqlquery, % sqlConn);
			command.Parameters->AddWithValue("@username", username);
			command.Parameters->AddWithValue("@password", password);

			SqlDataReader^ reader = command.ExecuteReader();

			if (reader->Read()) {

				Software start;
				start.ShowDialog();
			}
			else {
				MessageBox::Show("Invalid username or password.");
				username_textbox->Clear();
				password_textbox->Clear();
			}
		}
		catch (SqlException^ ex) {
			MessageBox::Show("SQL Exception: " + ex->Message + "\nNumber: " + ex->Number);
		}
		catch (Exception^ ex) {
			MessageBox::Show("Exception: " + ex->Message);
		}
	}


	private: System::Void exit_button_Click(System::Object^ sender, System::EventArgs^ e) {
		Application::Exit();
	}
	};
}

